/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { RiskControl, RiskControlInterface } from "../RiskControl";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "clientId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creditLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "riskScore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AssessmentPerformed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "BatchAssessmentPerformed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ParametersUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_annualIncome",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_clientId",
        type: "string",
      },
    ],
    name: "assessRisk",
    outputs: [
      {
        internalType: "uint256",
        name: "creditLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riskScore",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "assessmentResults",
    outputs: [
      {
        internalType: "uint256",
        name: "creditLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riskScore",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "string",
        name: "clientId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ages",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_incomes",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "_clientIds",
        type: "string[]",
      },
    ],
    name: "batchAssessRisk",
    outputs: [
      {
        internalType: "uint256",
        name: "successCount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllClientIds",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssessmentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_clientId",
        type: "string",
      },
    ],
    name: "getAssessmentResult",
    outputs: [
      {
        internalType: "uint256",
        name: "creditLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riskScore",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_clientIds",
        type: "string[]",
      },
    ],
    name: "getBatchAssessmentResults",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "creditLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "riskScore",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "string",
            name: "clientId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct RiskControl.AssessmentResult[]",
        name: "results",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRiskParameters",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "incomeMultiplier",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "riskThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct RiskControl.RiskParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "riskParameters",
    outputs: [
      {
        internalType: "uint256",
        name: "incomeMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "riskThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_incomeMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_riskThreshold",
        type: "uint256",
      },
    ],
    name: "updateRiskParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b505f80546001600160a01b031916331790556040805180820190915260028082526032602090920182905260018190555561154b8061004d5f395ff3fe608060405234801561000f575f80fd5b50600436106100cf575f3560e01c8063afb102ae1161007d578063c424f42611610058578063c424f42614610209578063ca25f16a14610239578063f2fde38b1461024e575f80fd5b8063afb102ae14610196578063ba2fbddb146101b9578063ba94626c146101cc575f80fd5b80637145b8e8116100ad5780637145b8e814610155578063893d20e81461016a57806398dda73214610184575f80fd5b80630aea7b56146100d357806340ed78a01461011157806347b9ec3b14610131575b5f80fd5b6100e66100e1366004610e82565b610261565b6040805194855260208501939093529015159183019190915260608201526080015b60405180910390f35b61012461011f366004610f6a565b610440565b6040516101089190610fe9565b61014461013f366004610e82565b6105f7565b604051610108959493929190611082565b61015d6106be565b60405161010891906110ba565b5f546040516001600160a01b039091168152602001610108565b6004545b604051908152602001610108565b6001546002546101a4919082565b60408051928352602083019190915201610108565b6101886101c7366004611178565b610792565b6040805180820182525f80825260209182015281518083018352600154808252600254918301918252835190815290519181019190915201610108565b61021c6102173660046111fa565b610938565b604080519384526020840192909252151590820152606001610108565b61024c61024736600461123c565b610b03565b005b61024c61025c36600461125c565b610bc8565b5f805f805f8551116102ba5760405162461bcd60e51b815260206004820152601960248201527f436c69656e742049442063616e6e6f7420626520656d7074790000000000000060448201526064015b60405180910390fd5b5f6003866040516102cb9190611289565b90815260408051918290036020908101832060a08401835280548452600181015491840191909152600281015460ff16151591830191909152600381018054606084019190610319906112a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610345906112a4565b80156103905780601f1061036757610100808354040283529160200191610390565b820191905f5260205f20905b81548152906001019060200180831161037357829003601f168201915b5050505050815260200160048201548152505090505f8160600151511161041f5760405162461bcd60e51b815260206004820152602660248201527f4e6f206173736573736d656e7420666f756e6420666f72207468697320636c6960448201527f656e74204944000000000000000000000000000000000000000000000000000060648201526084016102b1565b80516020820151604083015160809093015191989097509195509350915050565b6060815167ffffffffffffffff81111561045c5761045c610dd1565b6040519080825280602002602001820160405280156104bd57816020015b6104aa6040518060a001604052805f81526020015f81526020015f15158152602001606081526020015f81525090565b81526020019060019003908161047a5790505b5090505f5b82518110156105f15760038382815181106104df576104df6112d6565b60200260200101516040516104f49190611289565b90815260408051918290036020908101832060a08401835280548452600181015491840191909152600281015460ff16151591830191909152600381018054606084019190610542906112a4565b80601f016020809104026020016040519081016040528092919081815260200182805461056e906112a4565b80156105b95780601f10610590576101008083540402835291602001916105b9565b820191905f5260205f20905b81548152906001019060200180831161059c57829003601f168201915b505050505081526020016004820154815250508282815181106105de576105de6112d6565b60209081029190910101526001016104c2565b50919050565b80516020818301810180516003808352938301929094019190912092905281546001830154600284015492840180549294919360ff1692610637906112a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610663906112a4565b80156106ae5780601f10610685576101008083540402835291602001916106ae565b820191905f5260205f20905b81548152906001019060200180831161069157829003601f168201915b5050505050908060040154905085565b60606004805480602002602001604051908101604052809291908181526020015f905b82821015610789578382905f5260205f200180546106fe906112a4565b80601f016020809104026020016040519081016040528092919081815260200182805461072a906112a4565b80156107755780601f1061074c57610100808354040283529160200191610775565b820191905f5260205f20905b81548152906001019060200180831161075857829003601f168201915b5050505050815260200190600101906106e1565b50505050905090565b5f825184511480156107a5575081518351145b6108175760405162461bcd60e51b815260206004820152602660248201527f496e70757420617272617973206d7573742068617665207468652073616d652060448201527f6c656e677468000000000000000000000000000000000000000000000000000060648201526084016102b1565b505f805b84518110156108f857306001600160a01b031663c424f426868381518110610845576108456112d6565b602002602001015186848151811061085f5761085f6112d6565b6020026020010151868581518110610879576108796112d6565b60200260200101516040518463ffffffff1660e01b815260040161089f939291906112ea565b6060604051808303815f875af19250505080156108d9575060408051601f3d908101601f191682019092526108d691810190611311565b60015b156108f05750505081806108ec9061135f565b9250505b60010161081b565b50604080518281524260208201527fa12972a3d64876e86315ad2ac4c1d1d48a308820abe97027ab155d8c83a4db02910160405180910390a19392505050565b5f805f8084511161098b5760405162461bcd60e51b815260206004820152601960248201527f436c69656e742049442063616e6e6f7420626520656d7074790000000000000060448201526064016102b1565b6109958686610cc4565b6002545f94509092508210801591506109c3576001546109b6600c87611377565b6109c09190611396565b92505b6040518060a001604052808481526020018381526020018215158152602001858152602001428152506003856040516109fc9190611289565b90815260408051602092819003830190208351815591830151600183015582015160028201805460ff191691151591909117905560608201516003820190610a4490826113f9565b5060808201518160040155905050610a5b84610d3e565b610a9c57600480546001810182555f919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01610a9a85826113f9565b505b83604051610aaa9190611289565b604080519182900382208583526020830185905283151583830152426060840152905190917fbd497285247e7acfe64a6af55408f95392262bf5171ebb02fc35ed499af258d4919081900360800190a293509350939050565b5f546001600160a01b03163314610b705760405162461bcd60e51b815260206004820152602b60248201527f4f6e6c7920636f6e7472616374206f776e65722063616e20706572666f726d2060448201526a3a3434b99030b1ba34b7b760a91b60648201526084016102b1565b60408051808201825283815260200182905260018390556002829055517f78a481a9bf05238fc2e4b0fbe31376a20f5e458b448f89fb9305ab9be8c4651e90610bbc9042815260200190565b60405180910390a15050565b5f546001600160a01b03163314610c355760405162461bcd60e51b815260206004820152602b60248201527f4f6e6c7920636f6e7472616374206f776e65722063616e20706572666f726d2060448201526a3a3434b99030b1ba34b7b760a91b60648201526084016102b1565b6001600160a01b038116610c8b5760405162461bcd60e51b815260206004820181905260248201527f4e6577206f776e65722063616e6e6f74206265207a65726f206164647265737360448201526064016102b1565b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b5f8060288411610ce9576028610cda8582611396565b610ce49190611377565b610cec565b60285b90505f610cfc620f424085611377565b90505f603c610d0d6103e884611377565b11610d2357610d1e6103e883611377565b610d26565b603c5b9050610d3281846114b9565b93505050505b92915050565b5f805b600454811015610dc95782604051602001610d5c9190611289565b6040516020818303038152906040528051906020012060048281548110610d8557610d856112d6565b905f5260205f2001604051602001610d9d91906114cc565b6040516020818303038152906040528051906020012003610dc15750600192915050565b600101610d41565b505f92915050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0e57610e0e610dd1565b604052919050565b5f82601f830112610e25575f80fd5b813567ffffffffffffffff811115610e3f57610e3f610dd1565b610e52601f8201601f1916602001610de5565b818152846020838601011115610e66575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60208284031215610e92575f80fd5b813567ffffffffffffffff811115610ea8575f80fd5b610eb484828501610e16565b949350505050565b5f67ffffffffffffffff821115610ed557610ed5610dd1565b5060051b60200190565b5f82601f830112610eee575f80fd5b81356020610f03610efe83610ebc565b610de5565b82815260059290921b84018101918181019086841115610f21575f80fd5b8286015b84811015610f5f57803567ffffffffffffffff811115610f43575f80fd5b610f518986838b0101610e16565b845250918301918301610f25565b509695505050505050565b5f60208284031215610f7a575f80fd5b813567ffffffffffffffff811115610f90575f80fd5b610eb484828501610edf565b5f5b83811015610fb6578181015183820152602001610f9e565b50505f910152565b5f8151808452610fd5816020860160208601610f9c565b601f01601f19169290920160200192915050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b8381101561107457603f19898403018552815160a081518552888201518986015287820151151588860152606080830151828288015261105283880182610fbe565b6080948501519790940196909652505094870194925090860190600101611010565b509098975050505050505050565b858152846020820152831515604082015260a060608201525f6110a860a0830185610fbe565b90508260808301529695505050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561110f57603f198886030184526110fd858351610fbe565b945092850192908501906001016110e1565b5092979650505050505050565b5f82601f83011261112b575f80fd5b8135602061113b610efe83610ebc565b8083825260208201915060208460051b87010193508684111561115c575f80fd5b602086015b84811015610f5f5780358352918301918301611161565b5f805f6060848603121561118a575f80fd5b833567ffffffffffffffff808211156111a1575f80fd5b6111ad8783880161111c565b945060208601359150808211156111c2575f80fd5b6111ce8783880161111c565b935060408601359150808211156111e3575f80fd5b506111f086828701610edf565b9150509250925092565b5f805f6060848603121561120c575f80fd5b8335925060208401359150604084013567ffffffffffffffff811115611230575f80fd5b6111f086828701610e16565b5f806040838503121561124d575f80fd5b50508035926020909101359150565b5f6020828403121561126c575f80fd5b81356001600160a01b0381168114611282575f80fd5b9392505050565b5f825161129a818460208701610f9c565b9190910192915050565b600181811c908216806112b857607f821691505b6020821081036105f157634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b838152826020820152606060408201525f6113086060830184610fbe565b95945050505050565b5f805f60608486031215611323575f80fd5b835192506020840151915060408401518015158114611340575f80fd5b809150509250925092565b634e487b7160e01b5f52601160045260245ffd5b5f600182016113705761137061134b565b5060010190565b5f8261139157634e487b7160e01b5f52601260045260245ffd5b500490565b8082028115828204841417610d3857610d3861134b565b601f8211156113f457805f5260205f20601f840160051c810160208510156113d25750805b601f840160051c820191505b818110156113f1575f81556001016113de565b50505b505050565b815167ffffffffffffffff81111561141357611413610dd1565b6114278161142184546112a4565b846113ad565b602080601f83116001811461145a575f84156114435750858301515b5f19600386901b1c1916600185901b1785556114b1565b5f85815260208120601f198616915b8281101561148857888601518255948401946001909101908401611469565b50858210156114a557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b80820180821115610d3857610d3861134b565b5f8083546114d9816112a4565b600182811680156114f1576001811461150657611532565b60ff1984168752821515830287019450611532565b875f526020805f205f5b858110156115295781548a820152908401908201611510565b50505082870194505b5092969550505050505056fea164736f6c6343000818000a";

type RiskControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RiskControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RiskControl__factory extends ContractFactory {
  constructor(...args: RiskControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RiskControl & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RiskControl__factory {
    return super.connect(runner) as RiskControl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RiskControlInterface {
    return new Interface(_abi) as RiskControlInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RiskControl {
    return new Contract(address, _abi, runner) as unknown as RiskControl;
  }
}
